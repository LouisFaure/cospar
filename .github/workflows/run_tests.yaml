name: Run tests

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/run_tests.yaml'
      - 'cospar/**'
      - 'tests/**'
      - 'poetry.lock'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/run_tests.yaml'
      - 'cospar/**'
      - 'tests/**'
      - 'poetry.lock'

jobs:
  pytest:
    name: Run pytest
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.9", "3.10", "3.11" ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          installer-parallel: true
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest
